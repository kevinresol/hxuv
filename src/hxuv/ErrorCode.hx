package hxuv;

import uv.Uv;

class ErrorCode {
	public static var E2BIG(get, never):Int; static inline function get_E2BIG() return Uv.E2BIG;
	public static var EACCES(get, never):Int; static inline function get_EACCES() return Uv.EACCES;
	public static var EADDRINUSE(get, never):Int; static inline function get_EADDRINUSE() return Uv.EADDRINUSE;
	public static var EADDRNOTAVAIL(get, never):Int; static inline function get_EADDRNOTAVAIL() return Uv.EADDRNOTAVAIL;
	public static var EAFNOSUPPORT(get, never):Int; static inline function get_EAFNOSUPPORT() return Uv.EAFNOSUPPORT;
	public static var EAGAIN(get, never):Int; static inline function get_EAGAIN() return Uv.EAGAIN;
	public static var EAI_ADDRFAMILY(get, never):Int; static inline function get_EAI_ADDRFAMILY() return Uv.EAI_ADDRFAMILY;
	public static var EAI_AGAIN(get, never):Int; static inline function get_EAI_AGAIN() return Uv.EAI_AGAIN;
	public static var EAI_BADFLAGS(get, never):Int; static inline function get_EAI_BADFLAGS() return Uv.EAI_BADFLAGS;
	public static var EAI_BADHINTS(get, never):Int; static inline function get_EAI_BADHINTS() return Uv.EAI_BADHINTS;
	public static var EAI_CANCELED(get, never):Int; static inline function get_EAI_CANCELED() return Uv.EAI_CANCELED;
	public static var EAI_FAIL(get, never):Int; static inline function get_EAI_FAIL() return Uv.EAI_FAIL;
	public static var EAI_FAMILY(get, never):Int; static inline function get_EAI_FAMILY() return Uv.EAI_FAMILY;
	public static var EAI_MEMORY(get, never):Int; static inline function get_EAI_MEMORY() return Uv.EAI_MEMORY;
	public static var EAI_NODATA(get, never):Int; static inline function get_EAI_NODATA() return Uv.EAI_NODATA;
	public static var EAI_NONAME(get, never):Int; static inline function get_EAI_NONAME() return Uv.EAI_NONAME;
	public static var EAI_OVERFLOW(get, never):Int; static inline function get_EAI_OVERFLOW() return Uv.EAI_OVERFLOW;
	public static var EAI_PROTOCOL(get, never):Int; static inline function get_EAI_PROTOCOL() return Uv.EAI_PROTOCOL;
	public static var EAI_SERVICE(get, never):Int; static inline function get_EAI_SERVICE() return Uv.EAI_SERVICE;
	public static var EAI_SOCKTYPE(get, never):Int; static inline function get_EAI_SOCKTYPE() return Uv.EAI_SOCKTYPE;
	public static var EALREADY(get, never):Int; static inline function get_EALREADY() return Uv.EALREADY;
	public static var EBADF(get, never):Int; static inline function get_EBADF() return Uv.EBADF;
	public static var EBUSY(get, never):Int; static inline function get_EBUSY() return Uv.EBUSY;
	public static var ECANCELED(get, never):Int; static inline function get_ECANCELED() return Uv.ECANCELED;
	public static var ECHARSET(get, never):Int; static inline function get_ECHARSET() return Uv.ECHARSET;
	public static var ECONNABORTED(get, never):Int; static inline function get_ECONNABORTED() return Uv.ECONNABORTED;
	public static var ECONNREFUSED(get, never):Int; static inline function get_ECONNREFUSED() return Uv.ECONNREFUSED;
	public static var ECONNRESET(get, never):Int; static inline function get_ECONNRESET() return Uv.ECONNRESET;
	public static var EDESTADDRREQ(get, never):Int; static inline function get_EDESTADDRREQ() return Uv.EDESTADDRREQ;
	public static var EEXIST(get, never):Int; static inline function get_EEXIST() return Uv.EEXIST;
	public static var EFAULT(get, never):Int; static inline function get_EFAULT() return Uv.EFAULT;
	public static var EFBIG(get, never):Int; static inline function get_EFBIG() return Uv.EFBIG;
	public static var EHOSTUNREACH(get, never):Int; static inline function get_EHOSTUNREACH() return Uv.EHOSTUNREACH;
	public static var EINTR(get, never):Int; static inline function get_EINTR() return Uv.EINTR;
	public static var EINVAL(get, never):Int; static inline function get_EINVAL() return Uv.EINVAL;
	public static var EIO(get, never):Int; static inline function get_EIO() return Uv.EIO;
	public static var EISCONN(get, never):Int; static inline function get_EISCONN() return Uv.EISCONN;
	public static var EISDIR(get, never):Int; static inline function get_EISDIR() return Uv.EISDIR;
	public static var ELOOP(get, never):Int; static inline function get_ELOOP() return Uv.ELOOP;
	public static var EMFILE(get, never):Int; static inline function get_EMFILE() return Uv.EMFILE;
	public static var EMSGSIZE(get, never):Int; static inline function get_EMSGSIZE() return Uv.EMSGSIZE;
	public static var ENAMETOOLONG(get, never):Int; static inline function get_ENAMETOOLONG() return Uv.ENAMETOOLONG;
	public static var ENETDOWN(get, never):Int; static inline function get_ENETDOWN() return Uv.ENETDOWN;
	public static var ENETUNREACH(get, never):Int; static inline function get_ENETUNREACH() return Uv.ENETUNREACH;
	public static var ENFILE(get, never):Int; static inline function get_ENFILE() return Uv.ENFILE;
	public static var ENOBUFS(get, never):Int; static inline function get_ENOBUFS() return Uv.ENOBUFS;
	public static var ENODEV(get, never):Int; static inline function get_ENODEV() return Uv.ENODEV;
	public static var ENOENT(get, never):Int; static inline function get_ENOENT() return Uv.ENOENT;
	public static var ENOMEM(get, never):Int; static inline function get_ENOMEM() return Uv.ENOMEM;
	public static var ENONET(get, never):Int; static inline function get_ENONET() return Uv.ENONET;
	public static var ENOPROTOOPT(get, never):Int; static inline function get_ENOPROTOOPT() return Uv.ENOPROTOOPT;
	public static var ENOSPC(get, never):Int; static inline function get_ENOSPC() return Uv.ENOSPC;
	public static var ENOSYS(get, never):Int; static inline function get_ENOSYS() return Uv.ENOSYS;
	public static var ENOTCONN(get, never):Int; static inline function get_ENOTCONN() return Uv.ENOTCONN;
	public static var ENOTDIR(get, never):Int; static inline function get_ENOTDIR() return Uv.ENOTDIR;
	public static var ENOTEMPTY(get, never):Int; static inline function get_ENOTEMPTY() return Uv.ENOTEMPTY;
	public static var ENOTSOCK(get, never):Int; static inline function get_ENOTSOCK() return Uv.ENOTSOCK;
	public static var ENOTSUP(get, never):Int; static inline function get_ENOTSUP() return Uv.ENOTSUP;
	public static var EPERM(get, never):Int; static inline function get_EPERM() return Uv.EPERM;
	public static var EPIPE(get, never):Int; static inline function get_EPIPE() return Uv.EPIPE;
	public static var EPROTO(get, never):Int; static inline function get_EPROTO() return Uv.EPROTO;
	public static var EPROTONOSUPPORT(get, never):Int; static inline function get_EPROTONOSUPPORT() return Uv.EPROTONOSUPPORT;
	public static var EPROTOTYPE(get, never):Int; static inline function get_EPROTOTYPE() return Uv.EPROTOTYPE;
	public static var ERANGE(get, never):Int; static inline function get_ERANGE() return Uv.ERANGE;
	public static var EROFS(get, never):Int; static inline function get_EROFS() return Uv.EROFS;
	public static var ESHUTDOWN(get, never):Int; static inline function get_ESHUTDOWN() return Uv.ESHUTDOWN;
	public static var ESPIPE(get, never):Int; static inline function get_ESPIPE() return Uv.ESPIPE;
	public static var ESRCH(get, never):Int; static inline function get_ESRCH() return Uv.ESRCH;
	public static var ETIMEDOUT(get, never):Int; static inline function get_ETIMEDOUT() return Uv.ETIMEDOUT;
	public static var ETXTBSY(get, never):Int; static inline function get_ETXTBSY() return Uv.ETXTBSY;
	public static var EXDEV(get, never):Int; static inline function get_EXDEV() return Uv.EXDEV;
	public static var UNKNOWN(get, never):Int; static inline function get_UNKNOWN() return Uv.UNKNOWN;
	public static var EOF(get, never):Int; static inline function get_EOF() return Uv.EOF;
	public static var ENXIO(get, never):Int; static inline function get_ENXIO() return Uv.ENXIO;
	public static var EMLINK(get, never):Int; static inline function get_EMLINK() return Uv.EMLINK;
	
	public static inline function getName(error:Int):String return Uv.err_name(error);
	public static inline function toString(error:Int):String return Uv.strerror(error);
}